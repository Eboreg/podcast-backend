[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools"]

[project]
version = "0.2.23"
name = "spodcat-backend"
authors = [
    {name = "Robert Huselius", email = "robert@huseli.us"},
]
description = ""
license = {file = "LICENSE"}
requires-python = ">=3.10"
dependencies = [
    "django",
    # "python-dotenv",
    # "django-extensions",
    "djangorestframework",
    "djangorestframework-jsonapi[django-polymorphic,django-filter]",
    "pillow",                   # thumbnail generation
    "pydub",                    # generating dBFS arrays and normalising
    "feedgen",                  # generating RSS feed
    "iso639-lang",              # getting language choices for podcast
    "python-slugify",           # generating slugs for podcast content
    # "django-storages[azure]",
    # "whitenoise",               # serving static stuff
    "django-polymorphic",
    # "django-cors-headers",      # see settings.CORS_ALLOWED_ORIGINS
    "klaatu-django@https://github.com/Eboreg/klaatu-django/archive/refs/heads/master.zip",
    "martor",                   # Markdown editor for admin
    "feedparser",               # importing RSS feed
    "markdownify",              # convert HTML to Markdown when importing RSS feed
    # "azure-monitor-query",      # used by get_audio_request_logs
    # "azure-identity",           # used by get_audio_request_logs
    "geoip2",                   # used to get geo data for remote IPs
    # "redis",                    # used by cachalot
    # "hiredis",                  # makes stuff better somehow
    # "django-cachalot",
    # "django-redis",
    # "psycopg[binary]",          # postgresql
]

[project.optional-dependencies]
dev = [
    "django-debug-toolbar",
    "django-extensions",
    "flake8",
    "ipdb",
    "ipython",
    "isort",
    "pylint-django",
    "pylint",
    "python-dotenv",
    "types-markdown",
    "types-requests",
]

[project.scripts]
m = "manage:main"

[tool.pylint.main]
disable = [
    "broad-exception-caught",
    "import-outside-toplevel",
    "invalid-name",
    "invalid-str-returned",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "too-few-public-methods",
    "too-many-ancestors",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-locals",
    "too-many-positional-arguments",
    "too-many-return-statements",
    "too-many-statements",
    "unused-argument",
]
ignore = [".venv", "node_modules"]
ignore-patterns = ["^\\.#", ".*\\.pyi", "apps\\.py"]
ignore-paths = [".*migrations.*"]
max-line-length = 119

[tool.isort]
combine_as_imports = true
default_section = "THIRDPARTY"
include_trailing_comma = true
line_length = 79
multi_line_output = 3
lines_after_imports = 2
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
skip = [".venv", "node_modules"]

[tool.mypy]
follow_imports = "skip"
show_error_codes = true
ignore_missing_imports = true
files = "."
check_untyped_defs = true

[[tool.mypy.overrides]]
ignore_errors = true
module = ["*.migrations.*"]
