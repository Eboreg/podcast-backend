{"mappings":"A,C,KC4BA,SAAS,EAAoB,CAAY,MAXX,CAYtB,CAAA,EAAM,MAAM,YAAY,SAAW,AAR3C,SAAyB,CAAc,EACnC,IAAM,EAAM,EAAM,OAAO,CAAC,aACpB,EAAU,GAAK,mBAErB,OAAO,AAAW,MAAX,GAAmB,CAAC,EAAQ,SAAS,CAAC,QAAQ,CAAC,aAAe,EAAQ,SAAS,CAAC,QAAQ,CAAC,aACpG,EAG2D,EAAM,MAAM,IAZzC,EAaD,EAAM,MAAM,CAZrC,EAAM,OAAO,CAAC,oBAAoB,cAAc,eAAe,cAAc,IAAI,MAAM,UAc3F,CAEA,SAAS,EAAuB,CAAY,EACpC,EAAM,MAAM,YAAY,kBACxB,CAAA,EAAM,MAAM,CAAC,KAAK,CAAG,AApC7B,SAAyB,CAAa,EAElC,IAAM,EAAQ,AADd,CAAA,EAAQ,EAAM,IAAI,EAAlB,EACoB,KAAK,CAAC,KAE1B,GAAI,CAAC,EAAO,OAAO,EACnB,KAAO,EAAM,MAAM,CAAG,GAClB,EAAM,MAAM,CAAC,EAAG,EAAG,KAEvB,IAAK,IAAI,EAAM,EAAG,EAAM,EAAM,MAAM,CAAE,IAAO,CACzC,IAAM,EAAO,SAAS,CAAK,CAAC,EAAI,EAEhC,GAAI,MAAM,GAAO,OAAO,CACxB,CAAA,CAAK,CAAC,EAAI,CAAG,EAAK,cAAc,CAAC,KAAA,EAAW,CAAE,qBAAsB,CAAE,EAC1E,CACA,OAAO,EAAM,IAAI,CAAC,IACtB,EAqB6C,EAAM,MAAM,CAAC,KAAK,CAAA,CAE/D,CAEA,iBAAiB,mBAAoB,KACjC,SAAS,gBAAgB,CAAC,yBAAyB,OAAO,CAAC,AAAC,IACxD,EAAM,gBAAgB,CAAC,SAAU,EACrC,GACA,SAAS,gBAAgB,CAAC,oBAAoB,OAAO,CAAC,AAAC,IACnD,EAAM,gBAAgB,CAAC,SAAU,EACrC,EACJ,GAEA,iBAAiB,gBAAiB,AAAC,IAC3B,EAAM,MAAM,YAAY,UACxB,EAAM,MAAM,CAAC,gBAAgB,CAAC,SAAS,OAAO,CAAC,AAAC,IAC5C,EAAM,gBAAgB,CAAC,SAAU,EACrC,GACA,EAAM,MAAM,CAAC,gBAAgB,CAAC,oBAAoB,OAAO,CAAC,AAAC,IACvD,EAAM,gBAAgB,CAAC,SAAU,EACrC,GAER,E,C","sources":["<anon>","src/assets/ts/admin.ts"],"sourcesContent":["(() => {\nfunction $de33540da90539f5$var$formatTimestamp(value) {\n    value = value.trim();\n    const parts = value.split(\":\");\n    if (!value) return value;\n    while(parts.length < 3)parts.splice(0, 0, \"0\");\n    for(let idx = 1; idx < parts.length; idx++){\n        const part = parseInt(parts[idx]);\n        if (isNaN(part)) return value;\n        parts[idx] = part.toLocaleString(undefined, {\n            minimumIntegerDigits: 2\n        });\n    }\n    return parts.join(\":\");\n}\nfunction $de33540da90539f5$var$clickInlineAddButton(child) {\n    child.closest(\".inline-related\")?.querySelector(\".add-row a\")?.dispatchEvent(new Event(\"click\"));\n}\nfunction $de33540da90539f5$var$isLastInlineRow(child) {\n    const row = child.closest(\".form-row\");\n    const nextRow = row?.nextElementSibling;\n    return nextRow == null || !nextRow.classList.contains(\"form-row\") || nextRow.classList.contains(\"empty-form\");\n}\nfunction $de33540da90539f5$var$onInlineValueChange(event) {\n    if (event.target instanceof Element && $de33540da90539f5$var$isLastInlineRow(event.target)) $de33540da90539f5$var$clickInlineAddButton(event.target);\n}\nfunction $de33540da90539f5$var$onTimestampFieldChange(event) {\n    if (event.target instanceof HTMLInputElement) event.target.value = $de33540da90539f5$var$formatTimestamp(event.target.value);\n}\naddEventListener(\"DOMContentLoaded\", ()=>{\n    document.querySelectorAll(\".inline-related input\").forEach((input)=>{\n        input.addEventListener(\"change\", $de33540da90539f5$var$onInlineValueChange);\n    });\n    document.querySelectorAll(\".timestamp-field\").forEach((input)=>{\n        input.addEventListener(\"change\", $de33540da90539f5$var$onTimestampFieldChange);\n    });\n});\naddEventListener(\"formset:added\", (event)=>{\n    if (event.target instanceof Element) {\n        event.target.querySelectorAll(\"input\").forEach((input)=>{\n            input.addEventListener(\"change\", $de33540da90539f5$var$onInlineValueChange);\n        });\n        event.target.querySelectorAll(\".timestamp-field\").forEach((input)=>{\n            input.addEventListener(\"change\", $de33540da90539f5$var$onTimestampFieldChange);\n        });\n    }\n});\n\n})();\n//# sourceMappingURL=admin.js.map\n","function formatTimestamp(value: string) {\n    value = value.trim();\n    const parts = value.split(\":\");\n\n    if (!value) return value;\n    while (parts.length < 3) {\n        parts.splice(0, 0, \"0\");\n    }\n    for (let idx = 1; idx < parts.length; idx++) {\n        const part = parseInt(parts[idx]);\n\n        if (isNaN(part)) return value;\n        parts[idx] = part.toLocaleString(undefined, { minimumIntegerDigits: 2 });\n    }\n    return parts.join(\":\");\n}\n\nfunction clickInlineAddButton(child: Element) {\n    child.closest(\".inline-related\")?.querySelector(\".add-row a\")?.dispatchEvent(new Event(\"click\"));\n}\n\nfunction isLastInlineRow(child: Element): boolean {\n    const row = child.closest(\".form-row\");\n    const nextRow = row?.nextElementSibling;\n\n    return nextRow == null || !nextRow.classList.contains(\"form-row\") || nextRow.classList.contains(\"empty-form\");\n}\n\nfunction onInlineValueChange(event: Event) {\n    if (event.target instanceof Element && isLastInlineRow(event.target)) {\n        clickInlineAddButton(event.target);\n    }\n}\n\nfunction onTimestampFieldChange(event: Event) {\n    if (event.target instanceof HTMLInputElement) {\n        event.target.value = formatTimestamp(event.target.value);\n    }\n}\n\naddEventListener(\"DOMContentLoaded\", () => {\n    document.querySelectorAll(\".inline-related input\").forEach((input) => {\n        input.addEventListener(\"change\", onInlineValueChange);\n    });\n    document.querySelectorAll(\".timestamp-field\").forEach((input) => {\n        input.addEventListener(\"change\", onTimestampFieldChange);\n    });\n});\n\naddEventListener(\"formset:added\", (event) => {\n    if (event.target instanceof Element) {\n        event.target.querySelectorAll(\"input\").forEach((input) => {\n            input.addEventListener(\"change\", onInlineValueChange);\n        });\n        event.target.querySelectorAll(\".timestamp-field\").forEach((input) => {\n            input.addEventListener(\"change\", onTimestampFieldChange);\n        });\n    }\n});\n"],"names":["$de33540da90539f5$var$onInlineValueChange","event","child","target","Element","$de33540da90539f5$var$isLastInlineRow","row","closest","nextRow","nextElementSibling","classList","contains","querySelector","dispatchEvent","Event","$de33540da90539f5$var$onTimestampFieldChange","HTMLInputElement","value","$de33540da90539f5$var$formatTimestamp","parts","trim","split","length","splice","idx","part","parseInt","isNaN","toLocaleString","undefined","minimumIntegerDigits","join","addEventListener","document","querySelectorAll","forEach","input"],"version":3,"file":"admin.js.map"}