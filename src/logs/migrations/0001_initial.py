# Generated by Django 5.1.6 on 2025-04-24 23:33

import django.db.models.deletion
import klaatu_django.db
from django.db import migrations, models

import model_mixin


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GeoIP',
            fields=[
                ('ip', models.GenericIPAddressField(primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=10)),
                ('org', models.CharField(max_length=100)),
            ],
            bases=(model_mixin.ModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='RequestLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_bot', models.BooleanField(db_index=True, default=False)),
                ('path_info', klaatu_django.db.TruncatedCharField(blank=True, default='', max_length=200)),
                ('user_agent', models.CharField(blank=True, default='', max_length=255)),
                ('remote_addr', models.GenericIPAddressField(db_index=True, default=None, null=True)),
                ('remote_addr_category', models.CharField(choices=[('applebot', 'Applebot'), ('bingbot', 'Bingbot'), ('duckduckbot', 'Duckduckbot'), ('facebookbot', 'Facebookbot'), ('googlebot', 'Googlebot'), ('twitterbot', 'Twitterbot'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('remote_host', models.CharField(blank=True, default='', max_length=100)),
                ('referrer', klaatu_django.db.TruncatedCharField(blank=True, default='', max_length=100)),
                ('referrer_category', models.CharField(choices=[('app', 'App'), ('host', 'Host')], default=None, max_length=10, null=True)),
                ('referrer_name', models.CharField(blank=True, default='', max_length=50)),
                ('geoip', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='logs.geoip')),
            ],
            bases=(model_mixin.ModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UserAgent',
            fields=[
                ('user_agent', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('app', 'App'), ('bot', 'Bot'), ('browser', 'Browser'), ('library', 'Library')], db_index=True, max_length=10)),
                ('device_category', models.CharField(choices=[('auto', 'Auto'), ('computer', 'Computer'), ('mobile', 'Mobile'), ('smart_speaker', 'Smart Speaker'), ('smart_tv', 'Smart Tv'), ('watch', 'Watch')], default=None, max_length=20, null=True)),
                ('device_name', models.CharField(blank=True, default='', max_length=40)),
            ],
            bases=(model_mixin.ModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PodcastContentRequestLog',
            fields=[
                ('requestlog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='logs.requestlog')),
                ('created', models.DateTimeField(db_index=True)),
            ],
            options={
                'verbose_name': 'podcast content page request log',
                'verbose_name_plural': 'podcast content page request logs',
            },
            bases=('logs.requestlog',),
        ),
        migrations.CreateModel(
            name='PodcastEpisodeAudioRequestLog',
            fields=[
                ('requestlog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='logs.requestlog')),
                ('created', models.DateTimeField(db_index=True)),
                ('duration_ms', models.IntegerField()),
                ('response_body_size', models.IntegerField(db_index=True)),
                ('status_code', models.CharField(max_length=10)),
            ],
            bases=('logs.requestlog',),
        ),
        migrations.CreateModel(
            name='PodcastRequestLog',
            fields=[
                ('requestlog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='logs.requestlog')),
                ('created', models.DateTimeField(db_index=True)),
            ],
            options={
                'verbose_name': 'podcast page request log',
                'verbose_name_plural': 'podcast page request logs',
            },
            bases=('logs.requestlog',),
        ),
        migrations.AddField(
            model_name='requestlog',
            name='user_agent_data',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='logs.useragent'),
        ),
    ]
